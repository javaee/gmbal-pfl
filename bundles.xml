<?xml version="1.0" encoding="UTF-8"?>
<project name="bundles" basedir=".">
    <import file="modules.xml"/>

    <target name="init" depends="modules.init"/>
    <target name="-pre-init" depends="init"/>

    <patternset id="basic.export">
        <include name="org.glassfish.pfl.basic.algorithm"/> 
        <include name="org.glassfish.pfl.basic.concurrent"/> 
        <include name="org.glassfish.pfl.basic.contain"/> 
        <include name="org.glassfish.pfl.basic.facet"/> 
        <include name="org.glassfish.pfl.basic.fsm"/> 
        <include name="org.glassfish.pfl.basic.func"/> 
        <include name="org.glassfish.pfl.basic.logex"/> 
        <include name="org.glassfish.pfl.basic.proxy"/> 
    </patternset>

    <patternset id="basic-tools.export">
        <include name="org.glassfish.pfl.basic.tools.argparser"/> 
        <include name="org.glassfish.pfl.basic.tools.file"/> 
        <include name="org.glassfish.pfl.basic.tools.logex"/> 
    </patternset>

    <patternset id="dynamic.export">
        <include name="org.glassfish.pfl.dynamic.codegen.spi"/> 
        <include name="org.glassfish.pfl.dynamic.copyobject.spi"/> 
        <include name="org.glassfish.pfl.dynamic.generator"/> 
        <include name="org.glassfish.pfl.dynamic.codegen.impl"/> 
        <include name="org.glassfish.pfl.dynamic.copyobject.impl"/> 
    </patternset>

    <patternset id="tf.export">
        <include name="org.glassfish.pfl.tf.spi"/> 
        <include name="org.glassfish.pfl.tf.spi.annotation"/> 
        <include name="org.glassfish.pfl.tf.timer.spi"/> 
    </patternset>

    <patternset id="tf.private">
        <include name="org.glassfish.pfl.tf.timer.impl"/> 
    </patternset>

    <patternset id="tf-tools.export">
        <include name="org.glassfish.pfl.tf.tools.enhancer"/> 
    </patternset>

    <patternset id="test.export">
        <include name="org.glassfish.pfl.test"/> 
    </patternset>

    <property name="version" value="1.0.0-b001"/>
    <property name="bundle.dir" value="dist/bundles"/>
    <property name="bnd.classpath" value="build/classes"/>

    <target name="make-bundles" depends="modules.init">
        <make-bundle outfile="pfl-basic.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="basic.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle outfile="pfl-basic-tools.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="basic-tools.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle outfile="pfl-dynamic.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="dynamic.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle outfile="pfl-tf.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="tf.export"/>
                <directive type="Export-Package" name="tf.private"/>
            </directive-list>
        </make-bundle>
        <make-bundle outfile="pfl-tf-tools.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="tf-tools.export"/>
            </directive-list>
        </make-bundle>
        <make-bundle outfile="pfl-test.jar"
            outdir="${bundle.dir}"
            version="${version}"
            classpath="${bnd.classpath}">
            <directive-list>
                <directive type="Export-Package" name="test.export"/>
            </directive-list>
        </make-bundle>
    </target>

    <target name="-post-jar" depends="make-bundles"/>
</project>
